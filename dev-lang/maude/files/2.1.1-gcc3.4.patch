diff -ru maude-2.1.1/src/Core/argVec.hh maude-2.1.1-new/src/Core/argVec.hh
--- maude-2.1.1/src/Core/argVec.hh	2003-06-01 06:50:02.000000000 +0200
+++ maude-2.1.1-new/src/Core/argVec.hh	2004-10-09 01:12:28.000000000 +0200
@@ -41,6 +41,7 @@
 //
 #ifndef _argVec_hh_
 #define _argVec_hh_
+#include <dagNode.hh>
 
 template<class T>
 class ArgVec
diff -ru maude-2.1.1/src/Core/checkedArgVecConstIterator.hh maude-2.1.1-new/src/Core/checkedArgVecConstIterator.hh
--- maude-2.1.1/src/Core/checkedArgVecConstIterator.hh	2003-06-01 06:50:02.000000000 +0200
+++ maude-2.1.1-new/src/Core/checkedArgVecConstIterator.hh	2004-10-09 01:10:37.000000000 +0200
@@ -205,7 +205,7 @@
 inline typename ArgVec<T>::const_iterator
 ArgVec<T>::const_iterator::operator++(int)
 {
-  ArgVec::const_iterator tmp(*this);
+  typename ArgVec::const_iterator tmp(*this);
   operator++();
   return tmp;
 }
@@ -225,7 +225,7 @@
 inline typename ArgVec<T>::const_iterator
 ArgVec<T>::const_iterator::operator--(int)
 {
-  ArgVec::const_iterator tmp(*this);
+  typename ArgVec::const_iterator tmp(*this);
   operator--();
   return tmp;
 }
@@ -245,7 +245,7 @@
 inline typename ArgVec<T>::const_iterator
 ArgVec<T>::const_iterator::operator+(difference_type delta) const
 {
-  ArgVec::const_iterator tmp(*this);
+  typename ArgVec::const_iterator tmp(*this);
   return tmp += delta;
 }
 
@@ -264,7 +264,7 @@
 inline typename ArgVec<T>::const_iterator
 ArgVec<T>::const_iterator::operator-(difference_type delta) const
 {
-  ArgVec::const_iterator tmp(*this);
+  typename ArgVec::const_iterator tmp(*this);
   return tmp -= delta;
 }
 
diff -ru maude-2.1.1/src/Core/checkedArgVecIterator.hh maude-2.1.1-new/src/Core/checkedArgVecIterator.hh
--- maude-2.1.1/src/Core/checkedArgVecIterator.hh	2003-06-01 06:50:02.000000000 +0200
+++ maude-2.1.1-new/src/Core/checkedArgVecIterator.hh	2004-10-09 01:10:37.000000000 +0200
@@ -194,7 +194,7 @@
 inline typename ArgVec<T>::iterator
 ArgVec<T>::iterator::operator++(int)
 {
-  ArgVec::iterator tmp(*this);
+  typename ArgVec::iterator tmp(*this);
   operator++();
   return tmp;
 }
@@ -214,7 +214,7 @@
 inline typename ArgVec<T>::iterator
 ArgVec<T>::iterator::operator--(int)
 {
-  ArgVec::iterator tmp(*this);
+  typename ArgVec::iterator tmp(*this);
   operator--();
   return tmp;
 }
@@ -234,7 +234,7 @@
 inline typename ArgVec<T>::iterator
 ArgVec<T>::iterator::operator+(difference_type delta) const
 {
-  ArgVec::iterator tmp(*this);
+  typename ArgVec::iterator tmp(*this);
   return tmp += delta;
 }
 
@@ -253,7 +253,7 @@
 inline typename ArgVec<T>::iterator
 ArgVec<T>::iterator::operator-(difference_type delta) const
 {
-  ArgVec::iterator tmp(*this);
+  typename ArgVec::iterator tmp(*this);
   return tmp -= delta;
 }
 
diff -ru maude-2.1.1/src/FreeTheory/freeDagNode.hh maude-2.1.1-new/src/FreeTheory/freeDagNode.hh
--- maude-2.1.1/src/FreeTheory/freeDagNode.hh	2003-06-01 06:49:16.000000000 +0200
+++ maude-2.1.1-new/src/FreeTheory/freeDagNode.hh	2004-10-09 01:11:44.000000000 +0200
@@ -87,7 +87,7 @@
   if (nrArgs > nrWords)
     {
       setCallDtor();  // need our dtor called when garbage collected so we can free arg array
-      external = new (DagNode*)[nrArgs];
+      external = new DagNode*[nrArgs];
     }
 }
 
diff -ru maude-2.1.1/src/Interface/dagNode.hh maude-2.1.1-new/src/Interface/dagNode.hh
--- maude-2.1.1/src/Interface/dagNode.hh	2004-02-06 02:13:02.000000000 +0100
+++ maude-2.1.1-new/src/Interface/dagNode.hh	2004-10-09 01:13:10.000000000 +0200
@@ -25,6 +25,7 @@
 //
 #ifndef _dagNode_hh_
 #define _dagNode_hh_
+#include "symbol.hh"
 #include "redexPosition.hh"
 
 class DagNode
diff -ru maude-2.1.1/src/Mixfix/lexer.cc maude-2.1.1-new/src/Mixfix/lexer.cc
--- maude-2.1.1/src/Mixfix/lexer.cc	2004-05-26 04:04:40.000000000 +0200
+++ maude-2.1.1-new/src/Mixfix/lexer.cc	2004-10-09 01:26:59.000000000 +0200
@@ -9,6 +9,7 @@
 #define YY_FLEX_MINOR_VERSION 5
 
 #include <stdio.h>
+#include <unistd.h>
 
 
 /* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
@@ -22,7 +23,6 @@
 #ifdef __cplusplus
 
 #include <stdlib.h>
-#include <unistd.h>
 
 /* Use prototypes in function declarations. */
 #define YY_USE_PROTOS
@@ -2000,7 +2000,7 @@
 YY_DECL
 	{
 	register yy_state_type yy_current_state;
-	register char *yy_cp, *yy_bp;
+	register char *yy_cp = NULL, *yy_bp = NULL;
 	register int yy_act;
 
 #line 83 "../../../src/Mixfix/lexer.ll"
@@ -3367,6 +3367,7 @@
 #endif	/* ifndef YY_NO_UNPUT */
 
 
+#ifndef YY_NO_INPUT
 #ifdef __cplusplus
 static int yyinput()
 #else
@@ -3438,7 +3439,7 @@
 
 	return c;
 	}
-
+#endif /* YY_NO_INPUT */
 
 #ifdef YY_USE_PROTOS
 void yyrestart( FILE *input_file )
@@ -3549,11 +3550,6 @@
 	}
 
 
-#ifndef YY_ALWAYS_INTERACTIVE
-#ifndef YY_NEVER_INTERACTIVE
-extern int isatty YY_PROTO(( int ));
-#endif
-#endif
 
 #ifdef YY_USE_PROTOS
 void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )

diff -ru maude-2.1.1/src/Utility/checkedConstIterator.hh maude-2.1.1-new/src/Utility/checkedConstIterator.hh
--- maude-2.1.1/src/Utility/checkedConstIterator.hh	2003-06-01 06:29:22.000000000 +0200
+++ maude-2.1.1-new/src/Utility/checkedConstIterator.hh	2004-10-09 01:08:34.000000000 +0200
@@ -209,7 +209,7 @@
 inline typename Vector<T>::const_iterator
 Vector<T>::const_iterator::operator++(int)
 {
-  Vector::const_iterator tmp(*this);
+  typename Vector::const_iterator tmp(*this);
   operator++();
   return tmp;
 }
@@ -229,7 +229,7 @@
 inline typename Vector<T>::const_iterator
 Vector<T>::const_iterator::operator--(int)
 {
-  Vector::const_iterator tmp(*this);
+  typename Vector::const_iterator tmp(*this);
   operator--();
   return tmp;
 }
@@ -249,7 +249,7 @@
 inline typename Vector<T>::const_iterator
 Vector<T>::const_iterator::operator+(difference_type delta) const
 {
-  Vector::const_iterator tmp(*this);
+  typename Vector::const_iterator tmp(*this);
   return tmp += delta;
 }
 
@@ -268,7 +268,7 @@
 inline typename Vector<T>::const_iterator
 Vector<T>::const_iterator::operator-(difference_type delta) const
 {
-  Vector::const_iterator tmp(*this);
+  typename Vector::const_iterator tmp(*this);
   return tmp -= delta;
 }
 
diff -ru maude-2.1.1/src/Utility/checkedIterator.hh maude-2.1.1-new/src/Utility/checkedIterator.hh
--- maude-2.1.1/src/Utility/checkedIterator.hh	2003-06-01 06:29:22.000000000 +0200
+++ maude-2.1.1-new/src/Utility/checkedIterator.hh	2004-10-09 01:08:34.000000000 +0200
@@ -198,7 +198,7 @@
 inline typename Vector<T>::iterator
 Vector<T>::iterator::operator++(int)
 {
-  Vector::iterator tmp(*this);
+  typename Vector::iterator tmp(*this);
   operator++();
   return tmp;
 }
@@ -218,7 +218,7 @@
 inline typename Vector<T>::iterator
 Vector<T>::iterator::operator--(int)
 {
-  Vector::iterator tmp(*this);
+  typename Vector::iterator tmp(*this);
   operator--();
   return tmp;
 }
@@ -238,7 +238,7 @@
 inline typename Vector<T>::iterator
 Vector<T>::iterator::operator+(difference_type delta) const
 {
-  Vector::iterator tmp(*this);
+  typename Vector::iterator tmp(*this);
   return tmp += delta;
 }
 
@@ -257,7 +257,7 @@
 inline typename Vector<T>::iterator
 Vector<T>::iterator::operator-(difference_type delta) const
 {
-  Vector::iterator tmp(*this);
+  typename Vector::iterator tmp(*this);
   return tmp -= delta;
 }
 
diff -ru maude-2.1.1/src/Utility/indexedSet.hh maude-2.1.1-new/src/Utility/indexedSet.hh
--- maude-2.1.1/src/Utility/indexedSet.hh	2003-06-01 06:29:22.000000000 +0200
+++ maude-2.1.1-new/src/Utility/indexedSet.hh	2004-10-09 01:08:34.000000000 +0200
@@ -79,7 +79,7 @@
 IndexedSet<T>::insert(const T& element)
 {
   pair<typename EltMap::iterator, bool> p =
-    eltMap.insert(EltMap::value_type(element, indexMap.size()));
+    eltMap.insert(typename EltMap::value_type(element, indexMap.size()));
   if (p.second)
     indexMap.push_back(p.first);
   return p.first->second;
