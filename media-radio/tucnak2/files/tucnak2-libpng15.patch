--- src/img_png.c.old	2011-09-14 17:20:02.000000000 +0000
+++ src/img_png.c	2011-09-14 18:17:39.000000000 +0000
@@ -112,6 +112,8 @@
 	Uint32 Bmask;
 	Uint32 Amask;
 	SDL_Palette *palette;
+	png_colorp png_palette;
+	int png_num_palette;
 	png_bytep *volatile row_pointers;
 	int row, i;
 	volatile int ckey = -1;
@@ -144,7 +146,7 @@
 	 * the normal method of doing things with libpng).  REQUIRED unless you
 	 * set up your own error handlers in png_create_read_struct() earlier.
 	 */
-	if ( setjmp(png_ptr->jmpbuf) ) {
+	if ( setjmp(png_jmpbuf(png_ptr)) ) {
 		IMG_SetError("Error reading the PNG file.");
 		goto done;
 	}
@@ -213,9 +215,11 @@
 			Rmask = 0x000000FF;
 			Gmask = 0x0000FF00;
 			Bmask = 0x00FF0000;
-			Amask = (info_ptr->channels == 4) ? 0xFF000000 : 0;
+			Amask = (png_get_channels(png_ptr, info_ptr) == 4) 
+				? 0xFF000000 : 0;
 		} else {
-		        int s = (info_ptr->channels == 4) ? 0 : 8;
+		        int s = (png_get_channels(png_ptr, info_ptr) == 4)
+				? 0 : 8;
 			Rmask = 0xFF000000 >> s;
 			Gmask = 0x00FF0000 >> s;
 			Bmask = 0x0000FF00 >> s;
@@ -223,7 +227,8 @@
 		}
 	}
 	surface = SDL_AllocSurface(SDL_SWSURFACE, width, height,
-			bit_depth*info_ptr->channels, Rmask,Gmask,Bmask,Amask);
+			bit_depth*png_get_channels(png_ptr, info_ptr),
+			Rmask,Gmask,Bmask,Amask);
 	if ( surface == NULL ) {
 		IMG_SetError("Out of memory");
 		goto done;
@@ -264,6 +269,8 @@
 	*/
 
 	/* Load the palette, if any */
+	png_get_PLTE(png_ptr, info_ptr, &png_palette, &png_num_palette);
+
 	palette = surface->format->palette;
 	if ( palette ) {
 	    if(color_type == PNG_COLOR_TYPE_GRAY) {
@@ -273,12 +280,12 @@
 		    palette->colors[i].g = i;
 		    palette->colors[i].b = i;
 		}
-	    } else if (info_ptr->num_palette > 0 ) {
-		palette->ncolors = info_ptr->num_palette; 
-		for( i=0; i<info_ptr->num_palette; ++i ) {
-		    palette->colors[i].b = info_ptr->palette[i].blue;
-		    palette->colors[i].g = info_ptr->palette[i].green;
-		    palette->colors[i].r = info_ptr->palette[i].red;
+	    } else if (png_num_palette > 0 ) {
+		palette->ncolors = png_num_palette; 
+		for( i=0; i<png_num_palette; ++i ) {
+		    palette->colors[i].b = png_palette[i].blue;
+		    palette->colors[i].g = png_palette[i].green;
+		    palette->colors[i].r = png_palette[i].red;
 		}
 	    }
 	}
--- src/gfx_png.c.old	2011-09-14 17:09:33.000000000 +0000
+++ src/gfx_png.c	2011-09-14 17:14:05.000000000 +0000
@@ -56,12 +56,9 @@
 	    
     png_init_io(png_ptr, fi);
 
-    info_ptr->width = surf->w;
-    info_ptr->height = surf->h;
-    info_ptr->bit_depth = 8;
-    info_ptr->color_type = PNG_COLOR_TYPE_RGB;
-    info_ptr->interlace_type = 1;
-    info_ptr->valid = 0;
+    png_set_IHDR(png_ptr, info_ptr, surf->w, surf->h, 8,
+    	PNG_COLOR_TYPE_RGB, 1, PNG_COMPRESSION_TYPE_DEFAULT, 
+	PNG_FILTER_TYPE_DEFAULT);
 
     /* Set headers */
 
