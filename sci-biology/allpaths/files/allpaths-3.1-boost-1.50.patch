 configure          | 4 ++--
 system/file/File.h | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/configure b/configure
index 37b9812..b966fd7 100755
--- a/configure
+++ b/configure
@@ -9872,8 +9872,8 @@ $as_echo "found boost version $_version" >&6; }
   # using system specifics
 
   # lets use the system library
-  BOOST_WITH_COMP="libboost_filesystem-$CC$GCC_MAJOR_MINOR-mt.a"
-  BOOST_WITHOUT="libboost_filesystem-mt.a"
+  BOOST_WITH_COMP="libboost_filesystem-$CC$GCC_MAJOR_MINOR-mt.so"
+  BOOST_WITHOUT="libboost_filesystem-mt.so"
 
   # lets say that we're checking that
   { $as_echo "$as_me:$LINENO: checking for boost library name" >&5
diff --git a/system/file/File.h b/system/file/File.h
index da78272..14c9c62 100644
--- a/system/file/File.h
+++ b/system/file/File.h
@@ -149,7 +149,7 @@ public:
     /// return the filename portion of the file path
     /// e.g., /home/user/boat/file.txt would return file.txt
     std::string Filename() const
-    { return mPath.filename(); }
+    { return mPath.filename().string(); }
 
     /// return the path portion of the filename
     /// e.g., /home/user/boat/file.txt would return /home/user/boat
@@ -163,12 +163,12 @@ public:
     /// return the filename with its final extension (if any) removed
     /// e.g., /home/user/boat/file.txt would return /home/user/boat/file
     std::string Stem() const
-    { return mPath.stem(); }
+    { return mPath.stem().string(); }
 
     /// return the final extension (empty string, if there is none)
     /// e.g., /home/user/boat/file.txt would return .txt
     std::string Extension() const
-    { return mPath.extension(); }
+    { return mPath.extension().string(); }
 
     /// make a new File with a path obtained by removing this File's final extension, if any,
     /// and gluing on the newExtension (preceded by a '.' if it doesn't already start with one).
