diff --git a/media/filters/ffmpeg_glue.h b/media/filters/ffmpeg_glue.h
index 17241b9..8a92312 100644
--- a/media/filters/ffmpeg_glue.h
+++ b/media/filters/ffmpeg_glue.h
@@ -28,9 +28,9 @@
 #include "base/basictypes.h"
 #include "base/memory/scoped_ptr.h"
 #include "media/base/media_export.h"
+#include "media/ffmpeg/ffmpeg_common.h"
 
 struct AVFormatContext;
-struct AVIOContext;
 
 namespace media {
 
diff --git a/media/media.gyp b/media/media.gyp
index df217d2..fde3830 100644
--- a/media/media.gyp
+++ b/media/media.gyp
@@ -363,6 +363,9 @@
           'dependencies': [
             '../third_party/ffmpeg/ffmpeg.gyp:ffmpeg',
           ],
+          'export_dependent_settings': [
+            '../third_party/ffmpeg/ffmpeg.gyp:ffmpeg',
+          ],
         }, {  # use_ffmpeg == 0
           # Exclude the sources that depend on ffmpeg.
           'sources!': [
diff --git a/webkit/media/webkit_media.gypi b/webkit/media/webkit_media.gypi
index 81b770c..7b6d673 100644
--- a/webkit/media/webkit_media.gypi
+++ b/webkit/media/webkit_media.gypi
@@ -24,6 +24,7 @@
       'dependencies': [
         '<(DEPTH)/base/base.gyp:base',
         '<(DEPTH)/base/third_party/dynamic_annotations/dynamic_annotations.gyp:dynamic_annotations',
+        '<(DEPTH)/media/media.gyp:media',
         '<(DEPTH)/media/media.gyp:shared_memory_support',
         '<(DEPTH)/media/media.gyp:yuv_convert',
         '<(DEPTH)/skia/skia.gyp:skia',
--- a/media/ffmpeg/ffmpeg_common.cc.orig	2013-01-17 00:07:51.635057013 +0000
+++ b/media/ffmpeg/ffmpeg_common.cc	2013-01-17 00:15:50.867406811 +0000
@@ -10,6 +10,8 @@
 #include "media/base/video_frame.h"
 #include "media/base/video_util.h"
 
+#undef SampleFormat
+
 namespace media {
 
 // Why FF_INPUT_BUFFER_PADDING_SIZE? FFmpeg assumes all input buffers are
@@ -84,8 +86,10 @@
       return kCodecGSM_MS;
     case CODEC_ID_PCM_MULAW:
       return kCodecPCM_MULAW;
+#ifdef CODEC_ID_OPUS
     case CODEC_ID_OPUS:
       return kCodecOpus;
+#endif
     default:
       DVLOG(1) << "Unknown audio CodecID: " << codec_id;
   }
@@ -129,8 +133,10 @@
       return CODEC_ID_GSM_MS;
     case kCodecPCM_MULAW:
       return CODEC_ID_PCM_MULAW;
+#ifdef CODEC_ID_OPUS
     case kCodecOpus:
       return CODEC_ID_OPUS;
+#endif
     default:
       DVLOG(1) << "Unknown AudioCodec: " << audio_codec;
   }
@@ -423,8 +429,10 @@
       return CHANNEL_LAYOUT_6_1_FRONT;
     case AV_CH_LAYOUT_7POINT0_FRONT:
       return CHANNEL_LAYOUT_7_0_FRONT;
+#ifdef AV_CH_LAYOUT_7POINT1_WIDE_BACK
     case AV_CH_LAYOUT_7POINT1_WIDE_BACK:
       return CHANNEL_LAYOUT_7_1_WIDE_BACK;
+#endif
     case AV_CH_LAYOUT_OCTAGONAL:
       return CHANNEL_LAYOUT_OCTAGONAL;
     default:
--- a/media/filters/ffmpeg_audio_decoder.cc.orig	2013-01-17 00:18:24.998163847 +0000
+++ b/media/filters/ffmpeg_audio_decoder.cc	2013-01-17 00:37:12.863736499 +0000
@@ -402,6 +402,10 @@
 
     int decoded_audio_size = 0;
     if (frame_decoded) {
+#if !defined(LIBAVCODEC_VERSION_MAJOR) || !defined(LIBAVCODEC_VERSION_MINOR)
+#error missing version info
+#endif
+#if LIBAVCODEC_VERSION_MAJOR >= 54 && LIBAVCODEC_VERSION_MINOR >= 13
       int output_sample_rate = av_frame_->sample_rate;
       if (output_sample_rate != samples_per_second_) {
         DLOG(ERROR) << "Output sample rate (" << output_sample_rate
@@ -412,6 +416,7 @@
         queued_audio_.push_back(queue_entry);
         break;
       }
+#endif
 
       decoded_audio_size = av_samples_get_buffer_size(
           NULL, codec_context_->channels, av_frame_->nb_samples,
