From: Julian Ospald <hasufell@gentoo.org>
Date: Tue Feb 19 22:58:46 UTC 2013
Subject: make scripts POSIX compliant

--- teamviewer8/tv_bin/script/teamviewer
+++ teamviewer8/tv_bin/script/teamviewer
@@ -1,6 +1,6 @@
-#!/bin/bash
+#!/bin/sh
 
 TV_SCRIPT_DIR="$(dirname "$(readlink -e "$0")")"
-source "$TV_SCRIPT_DIR/tvw_main"
+. "$TV_SCRIPT_DIR/tvw_main"
 
 Main "$@"
--- teamviewer8/tv_bin/script/teamviewer_desktop
+++ teamviewer8/tv_bin/script/teamviewer_desktop
@@ -1,6 +1,6 @@
-#!/bin/bash
+#!/bin/sh
 
 TV_SCRIPT_DIR="$(dirname "$(readlink -e "$0")")"
-source "$TV_SCRIPT_DIR/tvw_main"
+. "$TV_SCRIPT_DIR/tvw_main"
 
 Run_TeamViewer_Desktop "$@"
--- teamviewer8/tv_bin/script/tvw_aux
+++ teamviewer8/tv_bin/script/tvw_aux
@@ -1,30 +1,34 @@
-#!/bin/bash
+#!/bin/sh
 
 
 # die with message
-function die()
+die()
 {
-  echo -e "\nError: $@\n"
+  echo
+  echo "Error: $@"
+  echo
   exit 1
 }
 
-function ABecho()
+ABecho()
 {
   printf "\E[1m %-30s \E[0m %s \n" "$1" "$2"
 }
 
-function fail()
+fail()
 {
-  echo -e "\nError: $@\n"
+  echo
+  echo "Error: $@"
+  echo
   false
 }
 
-function cmdExists()
+cmdExists()
 {
   command -v "$1" >/dev/null 2>&1
 }
 
-function getInitCmd()
+getInitCmd()
 {
   #exec 2> /dev/null
   readlink /proc/1/exe 2> /dev/null
@@ -32,7 +36,7 @@
 }
 
 # ensure path exists
-function make_path()
+make_path()
 {
   local path="$1"
   [ -d "$path" ] || mkdir -p "$path" || fail "Could not create $path"
@@ -40,34 +44,37 @@
 
 # real and effective user id should be the same - or the wine-profile could become useless
 # TODO: gracefully solve the issue by using su to run wine
-function validateUser()
+validateUser()
 {
   local userid=$(id -un)
 
   if [ "$userid" != "$USER" ] ; then
-    echo -e "\n\n *** TeamViewer can not be executed with sudo! ***\n Either use your normal user account without sudo\n or use a the real root account to log in to your desktop (not recommended!)."
-    
+    echo
+    echo "*** TeamViewer can not be executed with sudo! ***"
+    echo "Either use your normal user account without sudo"
+    echo "or use a the real root account to log in to your desktop (not recommended!)."
+ 
     return 1
   fi
 }
 
-function isSuperUser # root or sudo
+isSuperUser() # root or sudo
 {
   local userid=$(id -u)
-  [ "$userid" == 0 ]
+  [ "$userid" = 0 ]
 }
 
-function rootSuggest()
+rootSuggest()
 {
-  isSuperUser || echo -e "\nTry with root / sudo ?"
+  isSuperUser || { echo ; echo "Try with root / sudo ?" ;}
   false
 }
 
-function updateMenuEntries()
+updateMenuEntries()
 {
   local action="$1"						# install / uninstall
   xdg-desktop-menu $action --mode system "$TV_DESKTOP_FILE"	# prefer installed xdg script (tvw_config)
 
   cmdExists update-menus        && update-menus
   cmdExists update-icon-caches  && update-icon-caches /usr/share/icons/hicolor
-}
\ No newline at end of file
+}
--- teamviewer8/tv_bin/script/tvw_config
+++ teamviewer8/tv_bin/script/tvw_config
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 
 TV_VERSION="8.0.17147"
 TV_PKGTYPE="DEB"
--- teamviewer8/tv_bin/script/tvw_main
+++ teamviewer8/tv_bin/script/tvw_main
@@ -1,11 +1,11 @@
-#!/bin/bash
+#!/bin/sh
 
-source "$TV_SCRIPT_DIR/tvw_config"
-source "$TV_SCRIPT_DIR/tvw_aux"
-source "$TV_SCRIPT_DIR/tvw_daemon"
-source "$TV_SCRIPT_DIR/tvw_profile"
+. "$TV_SCRIPT_DIR/tvw_config"
+. "$TV_SCRIPT_DIR/tvw_aux"
+. "$TV_SCRIPT_DIR/tvw_daemon"
+. "$TV_SCRIPT_DIR/tvw_profile"
 
-function Init()
+Init()
 {
   local startLog="$TV_LOG_DIR/startup.log"
 
@@ -17,7 +17,7 @@
   InitProfile   >> "$startLog"		|| die "InitProfile failed. Please check '$startLog'"
 }
 
-function LogStartupInfo()
+LogStartupInfo()
 {
   exec 2>&1					# redirect stderr
 
@@ -45,7 +45,7 @@
 }
 
 
-function Main()
+Main()
 {
   local param="$1"
   local opt="$2"
@@ -72,7 +72,7 @@
   echo
 }
 
-function Run_TeamViewer
+Run_TeamViewer()
 {
   Init
   echo "Launching TeamViewer..."
@@ -82,7 +82,7 @@
   exec wine "c:\TeamViewer\TeamViewer.exe" "$@"
 }
 
-function Run_TeamViewer_Desktop
+Run_TeamViewer_Desktop()
 {
   [ "$1" = "--desktop" ] && shift
 
@@ -94,7 +94,7 @@
   exec wine "c:\TeamViewer\TeamViewer_Desktop.exe" "$@"
 }
 
-function Run_KillTeamViewer
+Run_KillTeamViewer()
 {
   local this="$0"			# ps: allow user names with more than 8 characters...
   local userlist=$(ps -e -o "user:25,command" | grep -v "^root" | grep TeamViewer | cut --delimiter=' ' -f 1)
@@ -111,19 +111,19 @@
   fi
 }
 
-function Run_WineCfg
+Run_WineCfg()
 {
   Init
   wine winecfg "$@"
 }
 
-function Run_RegEdit
+Run_RegEdit()
 {
   Init
   wine regedit "$@"
 }
 
-function Run_Daemon()
+Run_Daemon()
 {
   local opt="$1"
 
@@ -136,7 +136,7 @@
   esac
 }
 
-function SetPasswd()
+SetPasswd()
 {
   local pwd="$1"
   [ -n "$pwd" ] || die 'no password specified'
@@ -156,7 +156,7 @@
   echo
 }
 
-function ExportLicense()
+ExportLicense()
 {
   local license="$1"
   local path='/tmp/tv_global.conf'
@@ -176,7 +176,7 @@
   echo
 }
 
-function CreateZipLog()
+CreateZipLog()
 {
   local cfg_dir="config"
   local log_dir="logfiles"
@@ -202,7 +202,7 @@
   echo 'done'
 }
 
-function PrintHelp()
+PrintHelp()
 {
   PrintVersion
   echo
@@ -222,7 +222,7 @@
   ABecho "teamviewer --daemon enable"	"enable		TeamViewer daemon - start daemon on system startup (default)"
 }
 
-function PrintInfo()
+PrintInfo()
 {
   PrintVersion
   echo
@@ -231,12 +231,12 @@
   PrintTeamViewerID
 }
 
-function PrintVersion()
+PrintVersion()
 {
   ABecho "TeamViewer" "$TV_VERSION"
 }
 
-function PrintDaemonStatus()
+PrintDaemonStatus()
 {
   local cmd="$(daemonCtl 'status')"
   local txt="$(eval "$cmd")"
@@ -245,7 +245,7 @@
   ABecho "teamviewerd status" "$txt"
 }
 
-function PrintTeamViewerID
+PrintTeamViewerID()
 {
   local config="$TV_BASE_DIR/config/global.conf"
   local tvid
@@ -258,4 +258,4 @@
     echo "TeamViewer ID: not found"
     echo "Try restarting the TeamViewer daemon (e.g. teamviewer --daemon restart)"
   fi
-}
\ No newline at end of file
+}
--- teamviewer8/tv_bin/script/tvw_profile
+++ teamviewer8/tv_bin/script/tvw_profile
@@ -1,6 +1,6 @@
-#!/bin/bash
+#!/bin/sh
 
-function InitProfile()
+InitProfile()
 {
   exec 2>&1				# redirect stderr
 
@@ -12,7 +12,7 @@
   echo "ok"
 }
 
-function SetupWine()
+SetupWine()
 {
   # setup dosdevices and symlinks
   local c_sym="$WINEPREFIX/dosdevices/c:"
@@ -32,7 +32,7 @@
 
 
 # setup/validate drive symlinks
-function setup_drive_symlink()
+setup_drive_symlink()
 {
   local sym="$1"
   local dst="$2"
@@ -44,7 +44,7 @@
 }
 
 # setup logfile symlinks
-function setup_log_symlink
+setup_log_symlink()
 {
   local cuser=$(id -un)
   local basepath="$WINEPREFIX/drive_c/users/$cuser"
@@ -66,7 +66,7 @@
 }
 
 # TODO simplify by using a different Log dir
-function setup_prog_dir()
+setup_prog_dir()
 {
   local progdir="$WINEPREFIX/drive_c/TeamViewer"
   local progsrc="$TV_WINE_DIR/drive_c/TeamViewer"
@@ -83,7 +83,7 @@
   done
 }
 
-function setup_winemenubuilder()
+setup_winemenubuilder()
 {
   local sysdir="$WINEPREFIX/drive_c/windows/system32"
   local syssrc="$TV_WINE_DIR/drive_c/windows/system32"
@@ -93,7 +93,7 @@
   [ -e "$sysdir/winemenubuilder.exe" ] || die "Could not copy winemenubuilder"
 }
 
-function SetupWineTweaks()
+SetupWineTweaks()
 {
   [ "$USE_LOCAL_WINE" = "yes" ] && return
   [ -d "$WINEPREFIX/.tweak"   ] || mkdir "$WINEPREFIX/.tweak"
@@ -105,7 +105,7 @@
 #  winetweak setwinver		# Set Win2k mode for TeamViewer
 }
 
-function winetweak()
+winetweak()
 {
   local tweak="$1"
   local tweakmark="$WINEPREFIX/.tweak/$tweak"
@@ -118,7 +118,7 @@
 
 }
 
-function SetupTarEnv()
+SetupTarEnv()
 {
 echo " - "
 # TODO for tar - if [ "$TV_PKGTYPE" = "TAR" ] ; then
@@ -139,7 +139,7 @@
 #   fi
 }
 
-function SetupEnv()
+SetupEnv()
 {
 echo " - "
 # TODO remove
@@ -159,4 +159,4 @@
   uname -m > "$WINEPREFIX/drive_c/distarch"
   (cd /etc; ls -m *-release *-version *_version > "$WINEPREFIX/drive_c/distrelease" 2> /dev/null)
   true
-}
\ No newline at end of file
+}
