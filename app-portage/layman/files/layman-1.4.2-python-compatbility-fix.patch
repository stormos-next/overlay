From edce984f2c034254af33fd6fe18bc1e2689581bf Mon Sep 17 00:00:00 2001
From: Brian Dolbec <brian.dolbec@gmail.com>
Date: Fri, 22 Apr 2011 23:53:19 -0700
Subject: [PATCH] fix bug 363797 python-2.5 test errors.
 fixes broken *args for python 2.5 and 2.6+.
 Passes tests for all python versions supported.

---
 bin/layman                   |    2 +-
 layman/overlays/bzr.py       |    4 ++--
 layman/overlays/cvs.py       |    4 ++--
 layman/overlays/darcs.py     |    4 ++--
 layman/overlays/git.py       |    4 ++--
 layman/overlays/mercurial.py |    4 ++--
 layman/overlays/rsync.py     |    2 +-
 layman/overlays/source.py    |    4 ++--
 layman/overlays/svn.py       |    4 ++--
 layman/overlays/tar.py       |    2 +-
 10 files changed, 17 insertions(+), 17 deletions(-)
 mode change 100644 => 100755 layman/tests/dtest.py
 mode change 100644 => 100755 layman/tests/external.py

diff --git a/bin/layman b/bin/layman
index b85f4fa..01ee0c8 100755
--- a/bin/layman
+++ b/bin/layman
@@ -1,4 +1,4 @@
-#!python
+#!/usr/bin/python
 ################################################################################
 # LAYMAN - A UTILITY TO SELECT AND UPDATE GENTOO OVERLAYS
 ################################################################################
diff --git a/layman/overlays/bzr.py b/layman/overlays/bzr.py
index e73c2f4..b59cf6c 100644
--- a/layman/overlays/bzr.py
+++ b/layman/overlays/bzr.py
@@ -52,7 +52,7 @@ class BzrOverlay(OverlaySource):
 
         # bzr get SOURCE TARGET
         args = ['get', self.src + '/', path([base, self.parent.name])]
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -61,7 +61,7 @@ class BzrOverlay(OverlaySource):
 
         # bzr pull --overwrite SOURCE
         args = ['pull', '--overwrite', self.src]
-        return self.run_command(*args, cwd=path([base, self.parent.name]))
+        return self.run_command(args, cwd=path([base, self.parent.name]))
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/cvs.py b/layman/overlays/cvs.py
index f8fc277..4924ca4 100644
--- a/layman/overlays/cvs.py
+++ b/layman/overlays/cvs.py
@@ -83,7 +83,7 @@ class CvsOverlay(OverlaySource):
         args.append(self.parent.name)
         args.append(self.subpath)
 
-        return self.run_command(*args, cwd=base, env=dict(CVSROOT=self.src))
+        return self.run_command(args, cwd=base, env=dict(CVSROOT=self.src))
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -96,7 +96,7 @@ class CvsOverlay(OverlaySource):
             args.append('-q')
         args.append('update')
         args.append('-d')
-        return self.run_command(*args, cwd=path([base, self.parent.name]))
+        return self.run_command(args, cwd=path([base, self.parent.name]))
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/darcs.py b/layman/overlays/darcs.py
index 7d89477..c062543 100644
--- a/layman/overlays/darcs.py
+++ b/layman/overlays/darcs.py
@@ -51,7 +51,7 @@ class DarcsOverlay(OverlaySource):
 
         # darcs get --partial SOURCE TARGET
         args = ['get', '--partial', self.src + '/', path([base, self.parent.name])]
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -60,7 +60,7 @@ class DarcsOverlay(OverlaySource):
 
         # darcs pull --all SOURCE
         args = ['pull', '--all', self.src]
-        return self.run_command(*args, cwd=path([base, self.parent.name]))
+        return self.run_command(args, cwd=path([base, self.parent.name]))
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/git.py b/layman/overlays/git.py
index caa73f4..3b2608b 100644
--- a/layman/overlays/git.py
+++ b/layman/overlays/git.py
@@ -60,7 +60,7 @@ class GitOverlay(OverlaySource):
             args.append('-q')
         args.append(fix_git_source(self.src))
         args.append(path([base, self.parent.name]))
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -70,7 +70,7 @@ class GitOverlay(OverlaySource):
         args = ['pull']
         if quiet:
             args.append('-q')
-        return self.run_command(*args, cwd=path([base, self.parent.name]))
+        return self.run_command(args, cwd=path([base, self.parent.name]))
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/mercurial.py b/layman/overlays/mercurial.py
index 06cf59d..8bf919b 100644
--- a/layman/overlays/mercurial.py
+++ b/layman/overlays/mercurial.py
@@ -51,7 +51,7 @@ class MercurialOverlay(OverlaySource):
 
         # hg clone SOURCE TARGET
         args = ['clone', self.src + '/', path([base, self.parent.name])]
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -60,7 +60,7 @@ class MercurialOverlay(OverlaySource):
 
         # hg pull -u SOURCE
         args = ['pull', '-u', self.src]
-        return self.run_command(*args, cwd=path([base, self.parent.name]))
+        return self.run_command(args, cwd=path([base, self.parent.name]))
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/rsync.py b/layman/overlays/rsync.py
index 3a5a342..bf01462 100644
--- a/layman/overlays/rsync.py
+++ b/layman/overlays/rsync.py
@@ -66,7 +66,7 @@ class RsyncOverlay(OverlaySource):
         args.append(self.src + '/')
         args.append(path([base, self.parent.name]))
 
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/source.py b/layman/overlays/source.py
index 2c039c9..9e7f974 100644
--- a/layman/overlays/source.py
+++ b/layman/overlays/source.py
@@ -107,9 +107,9 @@ class OverlaySource(object):
     def command(self):
         return self.config['%s_command' % self.__class__.type_key]
 
-    def run_command(self, *args, **kwargs):
+    def run_command(self, args, **kwargs):
         file_to_run = _resolve_command(self.command())[1]
-        args = (file_to_run, ) + args
+        args = [file_to_run] + args
         assert('pwd' not in kwargs)  # Bug detector
 
         cwd = kwargs.get('cwd', None)
diff --git a/layman/overlays/svn.py b/layman/overlays/svn.py
index 2a30198..092d786 100644
--- a/layman/overlays/svn.py
+++ b/layman/overlays/svn.py
@@ -56,7 +56,7 @@ class SvnOverlay(OverlaySource):
         args.append(self.src + '/@')
         args.append(path([base, self.parent.name]))
 
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def sync(self, base, quiet = False):
         '''Sync overlay.'''
@@ -77,7 +77,7 @@ class SvnOverlay(OverlaySource):
             args.append('-q')
         args.append(checkout_location())
 
-        return self.run_command(*args)
+        return self.run_command(args)
 
     def supported(self):
         '''Overlay type supported?'''
diff --git a/layman/overlays/tar.py b/layman/overlays/tar.py
index 919f4df..612b6b6 100644
--- a/layman/overlays/tar.py
+++ b/layman/overlays/tar.py
@@ -128,7 +128,7 @@ class TarOverlay(OverlaySource):
 
         # tar -v -x -f SOURCE -C TARGET
         args = ['-v', '-x', '-f', pkg, '-C', dest_dir]
-        result = self.run_command(*args)
+        result = self.run_command(args)
 
         os.unlink(pkg)
         return result
diff --git a/layman/tests/dtest.py b/layman/tests/dtest.py
old mode 100644
new mode 100755
diff --git a/layman/tests/external.py b/layman/tests/external.py
old mode 100644
new mode 100755
-- 
1.7.4.1

