diff --git a/usr/src/cmd/grep/grep.c b/usr/src/cmd/grep/grep.c
index edc83be..4fcb11f 100644
--- a/usr/src/cmd/grep/grep.c
+++ b/usr/src/cmd/grep/grep.c
@@ -32,6 +32,8 @@
 
 /* Copyright 2012 Nexenta Systems, Inc.  All rights reserved. */
 
+/* Copyright (c) 2013 Andrew Stormont.  All rights reserved. */
+
 /*
  * grep -- print lines matching (or not matching) a pattern
  *
@@ -95,6 +97,7 @@ static int	iflag;
 static int	wflag;
 static int	hflag;
 static int	qflag;
+static int	Hflag;
 static int	errflg;
 static int	nfile;
 static long long	tln;
@@ -123,7 +126,7 @@ main(int argc, char **argv)
 #endif
 	(void) textdomain(TEXT_DOMAIN);
 
-	while ((c = getopt(argc, argv, "hqblcnRrsviyw")) != -1)
+	while ((c = getopt(argc, argv, "hqblcnRrsviywH")) != -1)
 		switch (c) {
 		case 'h':
 			hflag++;
@@ -162,6 +165,9 @@ main(int argc, char **argv)
 		case 'w':
 			wflag++;
 			break;
+		case 'H':
+			Hflag++;
+			break;
 		case '?':
 			errflg++;
 		}
@@ -313,7 +319,7 @@ execute(const char *file, int base)
 		(void) close(temp);
 
 		if (cflag && !qflag) {
-			if (nfile > 1 && !hflag && file)
+			if ((nfile > 1 || Hflag) && !hflag && file)
 				(void) fprintf(stdout, "%s:", file);
 			if (!rflag)
 			(void) fprintf(stdout, "%lld\n", tln);
@@ -411,7 +417,7 @@ execute(const char *file, int base)
 
 	if (cflag && !qflag) {
 		if (!hflag && file && (nfile > 1 ||
-		    (rflag && outfn)))
+		    (rflag && outfn) || Hflag))
 			(void) fprintf(stdout, "%s:", file);
 		(void) fprintf(stdout, "%lld\n", tln);
 	}
@@ -441,7 +447,7 @@ succeed(const char *f)
 		return (1);
 	}
 
-	if (!hflag && (nfile > 1 || (rflag && outfn))) {
+	if (!hflag && (nfile > 1 || (rflag && outfn) || Hflag)) {
 		/* print filename */
 		(void) fprintf(stdout, "%s:", f);
 	}
diff --git a/usr/src/cmd/grep_xpg4/grep.c b/usr/src/cmd/grep_xpg4/grep.c
index 8bfd8d7..623829c 100644
--- a/usr/src/cmd/grep_xpg4/grep.c
+++ b/usr/src/cmd/grep_xpg4/grep.c
@@ -36,6 +36,8 @@
 
 /* Copyright 2012 Nexenta Systems, Inc.  All rights reserved. */
 
+/* Copyright (c) 2013 Andrew Stormont.  All rights reserved. */
+
 #include <string.h>
 #include <stdlib.h>
 #include <ctype.h>
@@ -91,6 +93,7 @@ static uchar_t	wflag;			/* Search for expression as a word */
 static uchar_t	xflag;			/* Anchoring */
 static uchar_t	Eflag;			/* Egrep or -E flag */
 static uchar_t	Fflag;			/* Fgrep or -F flag */
+static uchar_t	Hflag;			/* Always print out filename */
 static uchar_t	Rflag;			/* Like rflag, but follow symlinks */
 static uchar_t	outfn;			/* Put out file name */
 static char	*cmdname;
@@ -155,7 +158,7 @@ main(int argc, char **argv)
 		}
 	}
 
-	while ((c = getopt(argc, argv, "vwchilnrbse:f:qxEFIR")) != EOF) {
+	while ((c = getopt(argc, argv, "vwchilnrbse:f:qxEFHIR")) != EOF) {
 		switch (c) {
 		case 'v':	/* POSIX: negate matches */
 			nvflag = 0;
@@ -242,6 +245,10 @@ main(int argc, char **argv)
 			Fflag++;
 			break;
 
+		case 'H':	/* GNU: always print out file name */
+			Hflag++;
+			break;
+
 		case 'R':	/* Solaris: like rflag, but follow symlinks */
 			Rflag++;
 			rflag++;
@@ -348,7 +355,7 @@ main(int argc, char **argv)
 	if (argc < 2) {
 		matched = grep(0, gettext("(standard input)"));
 	} else {
-		if (argc > 2 && hflag == 0)
+		if ((argc > 2 || Hflag) && hflag == 0)
 			outfn = 1;	/* Print filename on match line */
 		for (argv++; *argv != NULL; argv++) {
 			process_path(*argv);
