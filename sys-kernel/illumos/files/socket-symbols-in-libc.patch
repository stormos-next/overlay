diff --git a/usr/src/lib/libc/port/mapfile-vers b/usr/src/lib/libc/port/mapfile-vers
index 9dc147a..34c1674 100644
--- a/usr/src/lib/libc/port/mapfile-vers
+++ b/usr/src/lib/libc/port/mapfile-vers
@@ -26,6 +26,8 @@
 #
 # Copyright (c) 2012 by Delphix. All rights reserved.
 #
+# Copyright (c) 2013 Andrew Stormont.  All rights reserved.
+#
 
 #
 # MAPFILE HEADER START
@@ -90,6 +92,91 @@ $if _x86 && _ELF64
 $add amd64
 $endif
 
+SYMBOL_VERSION STORMOS_0.1 {	# StormOS additions
+    global:
+$if _ELF32
+	accept		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	bind		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	connect		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	endprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	freeaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	gai_strerror	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getnameinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getnetbyaddr	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getpeername	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getservbyport	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getsockname	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	getsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	inet_lnaof	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	listen		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	recv		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	recvfrom	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	send		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	setnetent	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	setprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	setservent	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	setsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	shutdown	{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+	socket		{ TYPE = FUNCTION; FILTER = /usr/lib/libsocket.so.1 };
+$elif sparcv9
+	accept		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	bind		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	connect		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	endprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	freeaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	gai_strerror	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getnameinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getnetbyaddr	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getpeername	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getservbyport	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getsockname	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	getsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	inet_lnaof	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	listen		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	recv		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	recvfrom	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	send		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	setnetent	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	setprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	setservent	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	setsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	shutdown	{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+	socket		{ TYPE = FUNCTION; FILTER = /usr/lib/sparcv9/libsocket.so.1 };
+$elif amd64
+	accept		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	bind		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	connect		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	endprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	freeaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	gai_strerror	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getaddrinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getnameinfo	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getnetbyaddr	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getpeername	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getservbyport	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getsockname	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	getsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	inet_lnaof	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	listen		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	recv		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	recvfrom	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	send		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	setnetent	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	setprotoent	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	setservent	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	setsockopt	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	shutdown	{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+	socket		{ TYPE = FUNCTION; FILTER = /usr/lib/amd64/libsocket.so.1 };
+$else
+$error unknown platform
+$endif
+} ILLUMOS_0.3;
+
 SYMBOL_VERSION ILLUMOS_0.3 {	# Illumos additions
     protected:
         assfail3;
