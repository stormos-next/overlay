diff -ur OpenCV-2.3.1.orig/modules/flann/include/opencv2/flann/all_indices.h OpenCV-2.3.1/modules/flann/include/opencv2/flann/all_indices.h
--- OpenCV-2.3.1.orig/modules/flann/include/opencv2/flann/all_indices.h	2011-09-12 13:42:27.000000000 -0500
+++ OpenCV-2.3.1/modules/flann/include/opencv2/flann/all_indices.h	2011-12-08 15:54:23.000000000 -0600
@@ -88,7 +88,7 @@
 };
 
 template<typename VectorSpace, typename Distance>
-struct index_creator<False,VectorSpace,Distance>
+struct index_creator<XFalse,VectorSpace,Distance>
 {
     static NNIndex<Distance>* create(const Matrix<typename Distance::ElementType>& dataset, const IndexParams& params, const Distance& distance)
     {
@@ -117,7 +117,7 @@
 };
 
 template<typename Distance>
-struct index_creator<False,False,Distance>
+struct index_creator<XFalse,XFalse,Distance>
 {
     static NNIndex<Distance>* create(const Matrix<typename Distance::ElementType>& dataset, const IndexParams& params, const Distance& distance)
     {
diff -ur OpenCV-2.3.1.orig/modules/flann/include/opencv2/flann/dist.h OpenCV-2.3.1/modules/flann/include/opencv2/flann/dist.h
--- OpenCV-2.3.1.orig/modules/flann/include/opencv2/flann/dist.h	2011-09-12 13:42:27.000000000 -0500
+++ OpenCV-2.3.1/modules/flann/include/opencv2/flann/dist.h	2011-12-08 15:54:11.000000000 -0600
@@ -79,11 +79,11 @@
 struct Accumulator<int> { typedef float Type; };
 
 
-class True
+class XTrue
 {
 };
 
-class False
+class XFalse
 {
 };
 
@@ -97,8 +97,8 @@
 template<class T>
 struct L2_Simple
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -130,8 +130,8 @@
 template<class T>
 struct L2
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -195,8 +195,8 @@
 template<class T>
 struct L1
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -252,8 +252,8 @@
 template<class T>
 struct MinkowskiDistance
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -316,8 +316,8 @@
 template<class T>
 struct MaxDistance
 {
-    typedef False is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XFalse is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -373,8 +373,8 @@
  */
 struct HammingLUT
 {
-    typedef False is_kdtree_distance;
-    typedef False is_vector_space_distance;
+    typedef XFalse is_kdtree_distance;
+    typedef XFalse is_vector_space_distance;
 
     typedef unsigned char ElementType;
     typedef int ResultType;
@@ -475,8 +475,8 @@
 template<class T>
 struct Hamming
 {
-    typedef False is_kdtree_distance;
-    typedef False is_vector_space_distance;
+    typedef XFalse is_kdtree_distance;
+    typedef XFalse is_vector_space_distance;
 
 
     typedef T ElementType;
@@ -537,8 +537,8 @@
 template<typename T>
 struct Hamming2
 {
-    typedef False is_kdtree_distance;
-    typedef False is_vector_space_distance;
+    typedef XFalse is_kdtree_distance;
+    typedef XFalse is_vector_space_distance;
 
     typedef T ElementType;
     typedef int ResultType;
@@ -596,8 +596,8 @@
 template<class T>
 struct HistIntersectionDistance
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -649,8 +649,8 @@
 template<class T>
 struct HellingerDistance
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -697,8 +697,8 @@
 template<class T>
 struct ChiSquareDistance
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
@@ -751,8 +751,8 @@
 template<class T>
 struct KL_Divergence
 {
-    typedef True is_kdtree_distance;
-    typedef True is_vector_space_distance;
+    typedef XTrue is_kdtree_distance;
+    typedef XTrue is_vector_space_distance;
 
     typedef T ElementType;
     typedef typename Accumulator<T>::Type ResultType;
