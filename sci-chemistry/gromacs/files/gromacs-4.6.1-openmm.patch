From e96c29f92e6cd1dd05945ef80e6a78d55747cf2e Mon Sep 17 00:00:00 2001
From: Christoph Junghans <junghans@votca.org>
Date: Thu, 17 Jan 2013 20:30:30 -0700
Subject: [PATCH] fix out of source build for OpenMM

* introduced in e508a07b6e127fa1cf31d263bcbd33e4040066cb

Change-Id: I6ad45fd2d5766d1c4a91ef2e0c442ff030fc1296
---
 CMakeLists.txt                     |  2 +-
 src/contrib/BuildMdrunOpenMM.cmake |  6 +++---
 src/contrib/CMakeLists.txt         |  3 ---
 src/contrib/mdrun_openmm.c         | 12 +++++++-----
 src/contrib/openmm_wrapper.cpp     |  1 +
 src/kernel/CMakeLists.txt          |  5 ++++-
 6 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index df12172..4c11a29 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -153,7 +153,7 @@ mark_as_advanced(GMX_FORCE_CXX)
 option(GMX_COOL_QUOTES "Enable Gromacs cool quotes" ON)
 mark_as_advanced(GMX_COOL_QUOTES)
 
-if(GMX_GPU OR GMX_FORCE_CXX)
+if(GMX_GPU OR GMX_FORCE_CXX OR GMX_OPENMM)
     enable_language(CXX)
 endif()
 set(CMAKE_PREFIX_PATH "" CACHE STRING "Extra locations to search for external libraries and tools (give directory without lib, bin, or include)")
diff --git a/src/contrib/BuildMdrunOpenMM.cmake b/src/contrib/BuildMdrunOpenMM.cmake
index bc954d6..6d04958 100644
--- a/src/contrib/BuildMdrunOpenMM.cmake
+++ b/src/contrib/BuildMdrunOpenMM.cmake
@@ -39,14 +39,14 @@ link_directories(${OpenMM_LIBRARY_DIR})
 # if the same OpenMM installation is used for running and building 
 add_definitions( -DOPENMM_PLUGIN_DIR="${OpenMM_PLUGIN_DIR}" ) 
 file(TO_CMAKE_PATH ${OpenMM_PLUGIN_DIR} _path)
-add_library(openmm_api_wrapper STATIC openmm_wrapper.cpp)
+add_library(openmm_api_wrapper STATIC ${CMAKE_SOURCE_DIR}/src/contrib/openmm_wrapper.cpp)
 target_link_libraries(openmm_api_wrapper ${OpenMM_LIBRARIES})
 list(APPEND GMX_EXTRA_LIBRARIES openmm_api_wrapper ${OpenMM_LIBRARIES})   
 
 list(REMOVE_ITEM MDRUN_SOURCES mdrun.c)
 list(APPEND MDRUN_SOURCES
-    ${CMAKE_CURRENT_SOURCE_DIR}/src/contrib/md_openmm.c
-    ${CMAKE_CURRENT_SOURCE_DIR}/src/contrib/mdrun_openmm.c)
+    ${CMAKE_SOURCE_DIR}/src/contrib/md_openmm.c
+    ${CMAKE_SOURCE_DIR}/src/contrib/mdrun_openmm.c)
 
 # this is to circumvent the following MSVC error: 
 # warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs
diff --git a/src/contrib/CMakeLists.txt b/src/contrib/CMakeLists.txt
index 7c5bb83..7725210 100644
--- a/src/contrib/CMakeLists.txt
+++ b/src/contrib/CMakeLists.txt
@@ -49,7 +49,6 @@ if(GMX_OPENMM)
         message(FATAL_ERROR "The OpenMM build is not compatible with the native GPU build")
     endif()
 
-    enable_language(CXX)
     set (GMX_BINARY_SUFFIX "-openmm")
     set (GMX_LIBS_SUFFIX "_openmm")
 
@@ -99,8 +98,6 @@ if(GMX_OPENMM)
     if(CMAKE_BUILD_TYPE STREQUAL "DEBUG")    
         set(CUDA_VERBOSE_BUILD ON)
     endif()
-    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/src/contrib)
-    find_package(OpenMM) 
 
     # mark as advanced the unused variables
     mark_as_advanced(FORCE GMX_CPU_ACCELERATION GMX_MPI GMX_FFT_LIBRARY 
diff --git a/src/contrib/mdrun_openmm.c b/src/contrib/mdrun_openmm.c
index 7771dcd..aeedeb4 100644
--- a/src/contrib/mdrun_openmm.c
+++ b/src/contrib/mdrun_openmm.c
@@ -153,7 +153,7 @@ int cmain(int argc,char *argv[])
     { efXVG, "-tpi",    "tpi",      ffOPTWR },
     { efXVG, "-tpid",   "tpidist",  ffOPTWR },
     { efEDI, "-ei",     "sam",      ffOPTRD },
-    { efEDO, "-eo",     "sam",      ffOPTWR },
+    { efXVG, "-eo",     "sam",      ffOPTWR },
     { efGCT, "-j",      "wham",     ffOPTRD },
     { efGCT, "-jo",     "bam",      ffOPTWR },
     { efXVG, "-ffout",  "gct",      ffOPTWR },
@@ -205,6 +205,8 @@ int cmain(int argc,char *argv[])
     { NULL, "interleave", "pp_pme", "cartesian", NULL };
   const char *dddlb_opt[] =
     { NULL, "auto", "no", "yes", NULL };
+  const char   *thread_aff_opt[threadaffNR+1] =
+    { NULL, "auto", "no", "yes", NULL };
   const char *nbpu_opt[] =
     { NULL, "auto", "cpu", "gpu", "gpu_cpu", NULL };
   real rdd=0.0,rconstr=0.0,dlb_scale=0.8,pforce=-1;
@@ -236,12 +238,12 @@ int cmain(int argc,char *argv[])
       "Number of OpenMP threads per MPI process/thread to start (0 is guess)" },
     { "-ntomp_pme", FALSE, etINT, {&hw_opt.nthreads_omp_pme},
       "Number of OpenMP threads per MPI process/thread to start (0 is -ntomp)" },
-    { "-pin",     FALSE, etBOOL, {&hw_opt.bThreadPinning},
+    { "-pin",     FALSE, etBOOL, {thread_aff_opt},
       "Pin OpenMP threads to cores" },
-    { "-pinht",   FALSE, etBOOL, {&hw_opt.bPinHyperthreading},
-      "Always pin threads to Hyper-Threading cores" },
     { "-pinoffset", FALSE, etINT, {&hw_opt.core_pinning_offset},
       "Core offset for pinning (for running multiple mdrun processes on a single physical node)" },
+    { "-pinstride", FALSE, etINT, {&hw_opt.core_pinning_stride},
+      "Pinning distance in logical cores for threads, use 0 to minimize the number of threads per physical core" },
     { "-gpu_id",  FALSE, etSTR, {&hw_opt.gpu_id},
       "List of GPU id's to use" },
     { "-ddcheck", FALSE, etBOOL, {&bDDBondCheck},
@@ -413,7 +415,7 @@ int cmain(int argc,char *argv[])
 
       if (MULTISIM(cr) && MASTER(cr))
       {
-          check_multi_int(stdout,cr->ms,sim_part,"simulation part");
+          check_multi_int(stdout,cr->ms,sim_part,"simulation part", TRUE);
       }
   } 
   else
diff --git a/src/contrib/openmm_wrapper.cpp b/src/contrib/openmm_wrapper.cpp
index 07f0eca..05c3210 100644
--- a/src/contrib/openmm_wrapper.cpp
+++ b/src/contrib/openmm_wrapper.cpp
@@ -63,6 +63,7 @@ using namespace std;
 #include "mdrun.h"
 #include "physics.h"
 #include "string2.h"
+#include "openmm_gpu_utils.h"
 #include "gpu_utils.h"
 #include "mtop_util.h"
 
diff --git a/src/kernel/CMakeLists.txt b/src/kernel/CMakeLists.txt
index 01e290c..3f95d33 100644
--- a/src/kernel/CMakeLists.txt
+++ b/src/kernel/CMakeLists.txt
@@ -88,7 +88,10 @@ if(GMX_OPENMM)
     # Even though the OpenMM build has "moved to contrib", many things
     # have be be done from within the scope of the CMakeLists.txt that
     # builds its mdrun, and that is here
-    include(../contrib/BuildMdrunOpenMM)
+    list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/src/contrib)
+    find_package(OpenMM)
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR})
+    include(${CMAKE_SOURCE_DIR}/src/contrib/BuildMdrunOpenMM.cmake)
 endif(GMX_OPENMM)
 
 if(GMX_GPU OR GMX_FORCE_CXX)
-- 
1.8.1.5

